import{_ as a,c as e,o as l,V as t}from"./chunks/framework.--NMbU3Q.js";const C=JSON.parse('{"title":"BFC范式","description":"","frontmatter":{},"headers":[],"relativePath":"Css/BFC范式.md","filePath":"Css/BFC范式.md"}'),o={name:"Css/BFC范式.md"},i=t('<h1 id="bfc范式" tabindex="-1">BFC范式 <a class="header-anchor" href="#bfc范式" aria-label="Permalink to &quot;BFC范式&quot;">​</a></h1><blockquote><p>BFC(Block Formatting Context),块级格式上下文.</p></blockquote><h2 id="什么是bfc" tabindex="-1">什么是BFC <a class="header-anchor" href="#什么是bfc" aria-label="Permalink to &quot;什么是BFC&quot;">​</a></h2><p>简单的来讲,bfc就是定义块级元素内部排列布局的一套规则.</p><h2 id="bfc规则" tabindex="-1">BFC规则 <a class="header-anchor" href="#bfc规则" aria-label="Permalink to &quot;BFC规则&quot;">​</a></h2><ol><li>独立容器,BFC内部元素与外部元素互相隔离.</li><li>BFC容器内元素垂直方向从上向下排列,垂直方向相邻的盒子margrin重叠</li><li>BFC容器内元素水平方向从左向右排列,浮动元素依旧如此</li><li>BFC元素不与float重叠</li><li>float元素参与高度计算</li></ol><h2 id="如何触发bfc" tabindex="-1">如何触发BFC <a class="header-anchor" href="#如何触发bfc" aria-label="Permalink to &quot;如何触发BFC&quot;">​</a></h2><blockquote><p>Floats, absolutely positioned elements, block containers (such as inline-blocks, table-cells, and table-captions) that are not block boxes, and block boxes with &#39;overflow&#39; other than &#39;visible&#39; (except when that value has been propagated to the viewport) establish new block formatting contexts for their contents. 浮动元素和绝对定位元素，非块级盒子的块级容器（例如 inline-blocks, table-cells, 和 table-captions），以及overflow值不为“visiable”的块级盒子，都会为他们的内容创建新的BFC（块级格式上下文）。 —— W3C</p></blockquote><ol><li>浮动, float不为none</li><li>绝对定位,absolute为fixed,absolute</li><li>overflow不为visible</li><li>非块级盒,display为inline-blocks,table-cells,table-captions</li><li>HTML根元素</li></ol><h2 id="bfc作用" tabindex="-1">BFC作用 <a class="header-anchor" href="#bfc作用" aria-label="Permalink to &quot;BFC作用&quot;">​</a></h2><ol><li><p>解决margin重叠问题,利用了BFC容器独立性,内外元素不互相干扰</p></li><li><p>float高度坍塌,利用BFC容器float元素参与高度计算</p></li><li><p>float重叠问题,利用了BFC不与float重叠</p></li></ol>',11),s=[i];function c(n,r,b,h,f,d){return l(),e("div",null,s)}const _=a(o,[["render",c]]);export{C as __pageData,_ as default};
